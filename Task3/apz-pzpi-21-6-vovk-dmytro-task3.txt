2 ІНЖЕНЕРНІ РІШЕННЯ
2.1 Структура та технології проєкту

Програми створювалася для мікроконтролера ESP32. Для розробки було використано інтеграцію PlatformIO.
Програми використовує вбудовану файлову систему SPIFFS для зберігання конфігурацій.
Архітектура програми дозволяє використовувати різні протоколи зв'язку. У цій роботі продемонстрована робота з використанням HTTP та WebSocket.

2.2 Архітектура програми

Щоб досягти гнучкості у роботі із різними протоколами зв’язку було створено два віртуальні класи: “DataSource” (див. розділ А.1 у додатку А) та “Communicator” (див. розділ А.2 у додатку А). “DataSource” (див. розділ А.1 у додатку А) являє собою клас для отримання інформації із фізичного пристрою. Communicator використовується для комунікації із сервером.
Екземпляри цих класів використовуються у конструкторі класу “DiscerniyCore” (див. розділ А.3 у додатку А), який містить головну логіку обробки даних. Це дозволяє просто змінювати джерело даних та канал комунікації.

2.3 Конфігурування

Для збереження конфігурацій була використана файлова система  SPIFFS. У ній зберігається файл у форматі JSON, який містить токен доступу, інтервал оновлення даних, дату створення токена та час до якого токен є дійсним. Ці дані завантажуються при ініціалізації системи.

2.4 Оновлення токена

Через те, що токен доступу має обмежений час дії, система кожну хвилину робить запит на актуальний час на сервері і якщо токен доступу закінчується через 1 хвилину, то програма робить запит на оновлення токена і якщо токен було оновлено успішно, то також оновлюються конфігурації самого пристрою (див. розділ А.4 у додатку А).

2.5 Зміна інтервалу оновлення

Інтервал оновлення геолокації може бути змінений з панелі адміністрування користувачів. Після цієї зміни, пристрій користувача отримує команду на оновлення цього інтервалу (див. розділ А.5 у додатку А). Змінений інтервал записується у конфігураційний файл пристрою.